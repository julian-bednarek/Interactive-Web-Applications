@use "sass:color"; // Import the color module

:host {
  // Define base colors as Sass variables for calculations
  $primary-color: #0d6efd;
  $secondary-color: #6c757d;
  $success-color: #198754;
  $danger-color: #dc3545;

  // Define CSS Variables for easy theming/reuse
  --dashboard-text-color: #333;
  --dashboard-muted-color: #6c757d;
  --dashboard-primary-color: #{$primary-color};
  --dashboard-secondary-color: #{$secondary-color};
  --dashboard-success-color: #{$success-color};
  --dashboard-danger-color: #{$danger-color};
  --dashboard-warning-color: #ffc107;
  --dashboard-info-color: #0dcaf0;
  --dashboard-light-bg: #f8f9fa;
  --dashboard-dark-bg: #212529;
  --dashboard-card-bg: #fff;
  --dashboard-card-border: #dee2e6;
  --dashboard-table-header-bg: #e9ecef;
  --dashboard-table-border: #dee2e6;
  --dashboard-table-stripe-bg: rgba(0, 0, 0, 0.03);
  --dashboard-shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.05);
  --dashboard-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  --dashboard-border-radius: 0.375rem;
  --dashboard-spacing-unit: 1rem;

  // Add CSS variables for hover states, calculated using Sass
  --dashboard-primary-color-hover: #{color.adjust($primary-color, $lightness: -7%)};
  --dashboard-secondary-color-hover: #{color.adjust($secondary-color, $lightness: -7%)};
  --dashboard-success-color-hover: #{color.adjust($success-color, $lightness: -7%)};
  --dashboard-danger-color-hover: #{color.adjust($danger-color, $lightness: -7%)};

  // Allow host to take up full available width
  display: block;
  width: 100%;
}

// --- Reusable Placeholder Selectors --- //

%dashboard-section {
  color: var(--dashboard-text-color);
}

%dashboard-header-area {
  // New placeholder for header styling
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: calc(var(--dashboard-spacing-unit) * 0.8) calc(var(--dashboard-spacing-unit) * 1); // Top/Bottom | Left/Right
  border-bottom: 1px solid var(--dashboard-card-border);
  margin-bottom: calc(var(--dashboard-spacing-unit) * 1.25);
  gap: var(--dashboard-spacing-unit);

  h2 {
    margin-bottom: 0;
  }

  .icon {
    margin-right: 0.4em;
    font-size: 0.9em;
    vertical-align: baseline;
  }
}

%dashboard-content-area {
  // New placeholder for main content area
  padding: 0 10px calc(var(--dashboard-spacing-unit) * 1);
}

%dashboard-title {
  font-size: 1.75rem;
  font-weight: 500;
  margin-bottom: calc(var(--dashboard-spacing-unit) * 1.5);
  color: var(--dashboard-text-color);
}

%loading-state {
  text-align: center;
  padding: var(--dashboard-spacing-unit);
  margin-bottom: var(--dashboard-spacing-unit);
  color: var(--dashboard-muted-color);
  background-color: var(--dashboard-light-bg);
  border-radius: var(--dashboard-border-radius);
  border: 1px solid var(--dashboard-card-border);
}

%error-state {
  @extend %loading-state; // Inherit base styles
  background-color: #f8d7da; // Consider using CSS vars if more themes needed
  color: #721c24;
  border-color: #f5c6cb;

  p {
    margin-bottom: 0.5em;
  }

  // Basic button styling within error
  button {
    margin-top: 0.5em;
    padding: 0.3rem 0.8rem;
    font-size: 0.9em;
    // Add more specific button styles if needed
  }
}

%dashboard-card {
  background-color: var(--dashboard-card-bg);
  border: 1px solid var(--dashboard-card-border);
  border-radius: var(--dashboard-border-radius);
  box-shadow: var(--dashboard-shadow-sm);
  margin-bottom: calc(var(--dashboard-spacing-unit) * 1.5);
  overflow: hidden; // Prevent content from breaking border-radius

  .card-body {
    padding: calc(var(--dashboard-spacing-unit) * 1.25);
  }

  .card-title {
    font-size: 1.25rem;
    font-weight: 500;
    margin-bottom: var(--dashboard-spacing-unit);
    color: var(--dashboard-text-color);
  }
}

%dashboard-form-group {
  margin-bottom: var(--dashboard-spacing-unit);

  label {
    font-weight: 500;
    margin-bottom: 0.4rem;
    display: block;
    font-size: 0.95em;
    color: var(--dashboard-muted-color);
  }

  input[type="text"],
  input[type="number"],
  input[type="email"],
  select,
  textarea {
    display: block;
    width: 100%;
    padding: 0.5rem 0.75rem;
    font-size: 1rem;
    font-weight: 400;
    line-height: 1.5;
    color: var(--dashboard-text-color);
    background-color: var(--dashboard-card-bg);
    background-clip: padding-box;
    border: 1px solid var(--dashboard-card-border);
    border-radius: var(--dashboard-border-radius);
    transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out;

    &:focus {
      border-color: var(--dashboard-primary-color);
      outline: 0;
      box-shadow: 0 0 0 0.25rem rgba(var(--dashboard-primary-color), 0.25);
    }

    // Add styles for invalid state if needed, e.g., using :invalid pseudo-class
    // or based on Angular classes like .ng-invalid
  }

  .invalid-feedback {
    color: var(--dashboard-danger-color);
    font-size: 0.875em;
    margin-top: 0.25rem;
    display: none; // Hidden by default
  }

  // Show feedback for touched/dirty invalid controls (common Angular pattern)
  &.ng-invalid.ng-touched .invalid-feedback,
  &.ng-invalid.ng-dirty .invalid-feedback {
    display: block;
  }
}

%dashboard-form-actions {
  display: flex;
  justify-content: flex-end;
  gap: 0.5rem; // Add space between buttons
  margin-top: calc(var(--dashboard-spacing-unit) * 1.5);
  padding-top: var(--dashboard-spacing-unit);
  border-top: 1px solid var(--dashboard-card-border); // Separator line
}

%dashboard-table {
  width: 100%;
  margin-bottom: var(--dashboard-spacing-unit);
  color: var(--dashboard-text-color);
  border-collapse: collapse; // Cleaner borders

  th,
  td {
    padding: 0.75rem;
    vertical-align: middle;
    border-top: 1px solid var(--dashboard-table-border);
    text-align: left;
  }

  thead th {
    vertical-align: bottom;
    border-bottom: 2px solid var(--dashboard-table-border);
    background-color: var(--dashboard-table-header-bg);
    font-weight: 500;
    color: var(--dashboard-muted-color);
    text-transform: uppercase;
    font-size: 0.85em;
    letter-spacing: 0.05em;
  }

  tbody tr {
    transition: background-color 0.15s ease-in-out;

    &:nth-of-type(odd) {
      background-color: var(--dashboard-table-stripe-bg);
    }

    &:hover {
      // Use CSS variable directly if possible, or a calculated one if needed
      // This uses a semi-transparent version of the primary color variable
      background-color: rgba(var(--dashboard-primary-color), 0.1);
    }
  }

  // Responsive wrapper
  .table-responsive {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    border: 1px solid var(--dashboard-table-border);
    border-radius: var(--dashboard-border-radius);
    box-shadow: var(--dashboard-shadow-sm);
  }
}

%dashboard-table-actions {
  text-align: right !important; // Ensure actions stay right
  white-space: nowrap;
  display: flex; // Use flex for better spacing control
  justify-content: flex-end;
  gap: 0.5rem;
}

// Define a mixin for small button size
@mixin button-size-small {
  padding: 0.25rem 0.5rem;
  font-size: 0.875rem;
  border-radius: calc(var(--dashboard-border-radius) * 0.8);
}

// --- Base Button Styles (can be extended or used directly) --- //
.btn {
  display: inline-flex; // Use inline-flex for icon alignment
  align-items: center;
  font-weight: 400;
  line-height: 1.5;
  color: var(--dashboard-text-color);
  text-align: center;
  text-decoration: none;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  background-color: transparent;
  border: 1px solid transparent;
  padding: 0.375rem 0.75rem;
  font-size: 1rem;
  border-radius: var(--dashboard-border-radius);
  transition: color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out;

  &:disabled {
    opacity: 0.65;
    cursor: not-allowed;
  }

  // Specific button colors (add more as needed)
  &.btn-primary {
    color: #fff;
    background-color: var(--dashboard-primary-color);
    border-color: var(--dashboard-primary-color);

    // Use the calculated hover CSS variable
    &:hover {
      background-color: var(--dashboard-primary-color-hover);
      border-color: var(--dashboard-primary-color-hover);
    }
  }

  &.btn-secondary {
    color: #fff;
    background-color: var(--dashboard-secondary-color);
    border-color: var(--dashboard-secondary-color);

    &:hover {
      background-color: var(--dashboard-secondary-color-hover);
      border-color: var(--dashboard-secondary-color-hover);
    }
  }

  &.btn-success {
    color: #fff;
    background-color: var(--dashboard-success-color);
    border-color: var(--dashboard-success-color);

    &:hover {
      background-color: var(--dashboard-success-color-hover);
      border-color: var(--dashboard-success-color-hover);
    }
  }

  &.btn-danger {
    color: #fff;
    background-color: var(--dashboard-danger-color);
    border-color: var(--dashboard-danger-color);

    &:hover {
      background-color: var(--dashboard-danger-color-hover);
      border-color: var(--dashboard-danger-color-hover);
    }
  }

  // Use the mixin for the .btn-sm class
  &.btn-sm {
    @include button-size-small;
  }
}


// --- Apply Reusable Styles to Fee Dashboard --- //

.fee-sub-dashboard {
  @extend %dashboard-section;

  .dashboard-header {
    @extend %dashboard-header-area;

    h2 {
      @extend %dashboard-title;
      margin-bottom: 0;
    }

    button.btn-success {
      @extend .btn, .btn-success;
      white-space: nowrap;
    }
  }

  .dashboard-content {
    @extend %dashboard-content-area;

    .loading-indicator {
      @extend %loading-state;
    }

    .error-message {
      @extend %error-state;

      button {
        @extend .btn, .btn-secondary, .btn-sm;
      }
    }

    .edit-form {
      @extend %dashboard-card;

      .form-group {
        @extend %dashboard-form-group;
      }

      .form-actions {
        @extend %dashboard-form-actions;

        button[type="submit"] {
          @extend .btn, .btn-primary;
        }

        button[type="button"] {
          @extend .btn, .btn-secondary;
        }
      }
    }

    .fee-list {
      .fee-list-content {
        // Add styles here if needed, e.g., margin-top
      }

      .table-responsive {
        border: 1px solid var(--dashboard-table-border);
        border-radius: var(--dashboard-border-radius);
        box-shadow: var(--dashboard-shadow-sm);
        overflow: hidden;

        .table-scroll-container {
          @extend %dashboard-table;
          max-height: 75vh;
          overflow-y: auto;
          margin-bottom: 0;
          border: none;
          box-shadow: none;
          border-radius: 0;

          table {
            width: 100%;
            table-layout: fixed;
            border-top: none;

            thead th {
              position: sticky;
              top: 0;
              z-index: 1;
              background-color: var(--dashboard-table-header-bg);
              border-bottom: 2px solid var(--dashboard-table-border);
            }

            tbody {
              // tbody styles if any
            }
          }
        }

        table {
          // These styles are now inside .table-scroll-container > table
        }
      }

      table {

        // General table styles might not be needed here anymore
        td:last-child {
          @extend %dashboard-table-actions;

          button {
            flex-basis: calc(50% - (var(--dashboard-spacing-unit) * 0.25));
            flex-grow: 1;
            justify-content: center;
            text-align: center;
          }

          button.btn-primary {
            @extend .btn, .btn-primary;
          }

          button.btn-danger {
            @extend .btn, .btn-danger;
          }
        }
      }

      p {
        text-align: center;
        color: var(--dashboard-muted-color);
        padding: var(--dashboard-spacing-unit);
      }
    }
  }
}


// --- Responsive Overrides --- //
// Reuse placeholders/mixins if applicable, or add specific overrides
@media (max-width: 768px) {
  .fee-sub-dashboard {
    .dashboard-header {
      flex-direction: column;
      align-items: flex-start;

      button.btn-success {
        margin-left: 0;
        width: 100%;
        justify-content: center;
        margin-top: 0.5rem;
      }
    }

    .dashboard-content {
      padding: 0 calc(var(--dashboard-spacing-unit) * 0.75) calc(var(--dashboard-spacing-unit) * 0.75);
    }

    .edit-form .form-actions {
      flex-direction: column;
      align-items: stretch;

      button {
        // Style adjustments for stacked buttons if needed
      }
    }

    .fee-list {

      // Target the table specifically for mobile overrides
      .table-responsive {
        // Remove border/shadow from outer container on mobile if desired
        // border: none;
        // box-shadow: none;

        .table-scroll-container {
          max-height: none; // Allow container to grow with content on mobile
          overflow-y: visible; // Disable internal scroll on mobile
          // Remove border/radius/shadow if applied via extend
          border: none;
          box-shadow: none;
          border-radius: 0;

          table {
            table-layout: auto; // Let columns size based on content
            width: 100%; // Ensure it still tries to fill width

            th,
            td {
              padding: 0.5rem 0.4rem; // Reduce padding
              white-space: normal; // Ensure text can wrap
              // Allow word breaking for long words
              word-break: break-word;
              hyphens: auto;
            }

            // Remove fixed width on actions column
            th:last-child,
            td:last-child {
              width: auto;
            }

            // Stack action buttons vertically
            td:last-child {
              display: flex;
              flex-direction: column; // Stack vertically
              align-items: stretch; // Make buttons full width of cell
              gap: 0.3rem; // Space between stacked buttons
              padding: 0.5rem; // Adjust padding for stacked buttons

              button {
                flex-basis: auto; // Reset flex basis
                flex-grow: 0; // Don't allow growing
                width: 100%; // Explicit width
                // Keep text centered
                justify-content: center;
                text-align: center;
                // Use the mixin instead of @extend
                @include button-size-small;
              }
            }
          }
        }
      }
    }
  }
}